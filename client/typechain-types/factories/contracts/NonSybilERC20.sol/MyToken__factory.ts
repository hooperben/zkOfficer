/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MyToken,
  MyTokenInterface,
} from "../../../contracts/NonSybilERC20.sol/MyToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "_publicInputs",
        type: "bytes32[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract UltraVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162001cb038038062001cb0833981016040819052620000359162000266565b6040518060400160405280600781526020016626bcaa37b5b2b760c91b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b8152508160039081620000bd91906200039b565b506004620000cc82826200039b565b50620000de9150839050600562000149565b61012052620000ef81600662000149565b61014052815160208084019190912060e052815190820120610100524660a0526200011962000182565b60805250503060c05250600880546001600160a01b0319166001600160a01b039290921691909117905562000583565b600060208351101562000169576200016183620001de565b90506200017c565b816200017684826200039b565b5060ff90505b92915050565b60e05161010051604051600092620001c3927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f92469030906020016200047a565b60405160208183030381529060405280519060200120905090565b600080829050601f8151111562000215578260405163305a27a960e01b81526004016200020c91906200052b565b60405180910390fd5b8051620002228262000549565b179392505050565b90565b60006001600160a01b0382166200017c565b6200024a816200022d565b81146200025657600080fd5b50565b80516200017c816200023f565b6000602082840312156200027d576200027d600080fd5b62000289838362000259565b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b600281046001821680620002d157607f821691505b602082108103620002e657620002e6620002a6565b50919050565b60006200017c6200022a8381565b6200030583620002ec565b815460001960089490940293841b1916921b91909117905550565b60006200032f818484620002fa565b505050565b8181101562000353576200034a60008262000320565b60010162000334565b5050565b601f8211156200032f576000818152602090206020601f85010481016020851015620003805750805b620003946020601f86010483018262000334565b5050505050565b81516001600160401b03811115620003b757620003b762000290565b620003c38254620002bc565b620003d082828562000357565b506020601f821160018114620004085760008315620003ef5750848201515b600019600885021c198116600285021785555062000394565b600084815260208120601f198516915b828110156200043a578785015182556020948501946001909201910162000418565b5084821015620004585783870151600019601f87166008021c191681555b50505050600202600101905550565b805b82525050565b62000469816200022d565b60a081016200048a828862000467565b62000499602083018762000467565b620004a8604083018662000467565b620004b7606083018562000467565b620004c660808301846200046f565b9695505050505050565b60005b83811015620004ed578181015183820152602001620004d3565b50506000910152565b600062000501825190565b8084526020840193506200051a818560208601620004d0565b601f01601f19169290920192915050565b60208082528101620002898184620004f6565b60006200017c825190565b600062000554825190565b6020830162000563816200053e565b9250506020811015620002e6576000196020919091036008021b16919050565b60805160a05160c05160e0516101005161012051610140516116d2620005de60003960006108390152600061080c01526000610ba301526000610b8201526000610787015260006107b1015260006107db01526116d26000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610220578063c1d7799c14610233578063d505accf14610248578063dd62ed3e1461025b57600080fd5b806370a08231146101c15780637ecebe00146101ea57806384b0196e146101fd57806395d89b411461021857600080fd5b80632997e86b116100d35780632997e86b146101675780632b7ac3f31461018a578063313ce567146101aa5780633644e515146101b957600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014357806323b872dd14610154575b600080fd5b61010d610294565b60405161011a9190610f38565b60405180910390f35b610136610131366004610f8d565b610326565b60405161011a9190610fcf565b6002545b60405161011a9190610fe3565b610136610162366004610ff1565b610340565b61013661017536600461103a565b60096020526000908152604090205460ff1681565b60085461019d906001600160a01b031681565b60405161011a9190611078565b601260405161011a919061108f565b610147610366565b6101476101cf36600461109d565b6001600160a01b031660009081526020819052604090205490565b6101476101f836600461109d565b610375565b610205610393565b60405161011a979695949392919061114b565b61010d6103f5565b61013661022e366004610f8d565b610404565b610246610241366004611264565b610412565b005b610246610256366004611305565b6104fb565b610147610269366004611395565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102a3906113da565b80601f01602080910402602001604051908101604052809291908181526020018280546102cf906113da565b801561031c5780601f106102f15761010080835404028352916020019161031c565b820191906000526020600020905b8154815290600101906020018083116102ff57829003601f168201915b5050505050905090565b600033610334818585610635565b60019150505b92915050565b60003361034e858285610647565b6103598585856106e9565b60019150505b9392505050565b600061037061077a565b905090565b6001600160a01b03811660009081526007602052604081205461033a565b6000606080600080600060606103a7610805565b6103af610832565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b6060600480546102a3906113da565b6000336103348185856106e9565b6008546040517fea50d0e40000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063ea50d0e49061046190879087908790879060040161148d565b602060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a291906114d1565b6104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890611522565b60405180910390fd5b6104f48568056bc75e2d6310000061085f565b5050505050565b8342111561053757836040517f627913020000000000000000000000000000000000000000000000000000000081526004016104d89190610fe3565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105848c6001600160a01b0316600090815260076020526040902080546001810190915590565b8960405160200161059a96959493929190611532565b60405160208183030381529060405280519060200120905060006105bd826108b2565b905060006105cd828787876108fa565b9050896001600160a01b0316816001600160a01b03161461061e57808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016104d892919061158c565b6106298a8a8a610635565b50505050505050505050565b610642838383600161092a565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106e357818110156106d4578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016104d8939291906115a7565b6106e38484848403600061092a565b50505050565b6001600160a01b03831661072c5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016104d891906115cf565b6001600160a01b03821661076f5760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016104d891906115cf565b610642838383610a2f565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156107d357507f000000000000000000000000000000000000000000000000000000000000000046145b156107fd57507f000000000000000000000000000000000000000000000000000000000000000090565b610370610b5d565b60606103707f00000000000000000000000000000000000000000000000000000000000000006005610bf3565b60606103707f00000000000000000000000000000000000000000000000000000000000000006006610bf3565b6001600160a01b0382166108a25760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016104d891906115cf565b6108ae60008383610a2f565b5050565b600061033a6108bf61077a565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b60008060008061090c88888888610c9e565b92509250925061091c8282610d60565b50909150505b949350505050565b6001600160a01b03841661096d5760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016104d891906115cf565b6001600160a01b0383166109b05760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016104d891906115cf565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156106e357826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a219190610fe3565b60405180910390a350505050565b6001600160a01b038316610a5a578060026000828254610a4f91906115f3565b90915550610ad29050565b6001600160a01b03831660009081526020819052604090205481811015610ab3578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104d8939291906115a7565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610aee57600280548290039055610b0d565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b509190610fe3565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610bd8959493929190611606565b60405160208183030381529060405280519060200120905090565b606060ff8314610c0d57610c0683610e62565b905061033a565b818054610c19906113da565b80601f0160208091040260200160405190810160405280929190818152602001828054610c45906113da565b8015610c925780601f10610c6757610100808354040283529160200191610c92565b820191906000526020600020905b815481529060010190602001808311610c7557829003601f168201915b5050505050905061033a565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610cd95750600091506003905082610d56565b600060018888888860405160008152602001604052604051610cfe9493929190611648565b6020604051602081039080840390855afa158015610d20573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610d4c57506000925060019150829050610d56565b9250600091508190505b9450945094915050565b6000826003811115610d7457610d74611686565b03610d7d575050565b6001826003811115610d9157610d91611686565b03610dc8576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002826003811115610ddc57610ddc611686565b03610e15576040517ffce698f70000000000000000000000000000000000000000000000000000000081526104d8908290600401610fe3565b6003826003811115610e2957610e29611686565b036108ae57806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016104d89190610fe3565b60606000610e6f83610ea1565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561033a576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b83811015610efd578181015183820152602001610ee5565b50506000910152565b6000610f10825190565b808452602084019350610f27818560208601610ee2565b601f01601f19169290920192915050565b6020808252810161035f8184610f06565b60006001600160a01b03821661033a565b610f6381610f49565b8114610f6e57600080fd5b50565b803561033a81610f5a565b80610f63565b803561033a81610f7c565b60008060408385031215610fa357610fa3600080fd5b610fad8484610f71565b9150610fbc8460208501610f82565b90509250929050565b8015155b82525050565b6020810161033a8284610fc5565b80610fc9565b6020810161033a8284610fdd565b60008060006060848603121561100957611009600080fd5b6110138585610f71565b92506110228560208601610f71565b91506110318560408601610f82565b90509250925092565b60006020828403121561104f5761104f600080fd5b61035f8383610f82565b600061033a82610f49565b600061033a82611059565b610fc981611064565b6020810161033a828461106f565b60ff8116610fc9565b6020810161033a8284611086565b6000602082840312156110b2576110b2600080fd5b61035f8383610f71565b7fff000000000000000000000000000000000000000000000000000000000000008116610fc9565b610fc981610f49565b6110f78282610fdd565b5060200190565b60200190565b600061110e825190565b808452602093840193830160005b8281101561114157815161113087826110ed565b96505060208201915060010161111c565b5093949350505050565b60e08101611159828a6110bc565b818103602083015261116b8189610f06565b9050818103604083015261117f8188610f06565b905061118e6060830187610fdd565b61119b60808301866110e4565b6111a860a0830185610fdd565b81810360c08301526111ba8184611104565b9998505050505050505050565b60008083601f8401126111dc576111dc600080fd5b50813567ffffffffffffffff8111156111f7576111f7600080fd5b60208301915083600182028301111561121257611212600080fd5b9250929050565b60008083601f84011261122e5761122e600080fd5b50813567ffffffffffffffff81111561124957611249600080fd5b60208301915083602082028301111561121257611212600080fd5b60008060008060006060868803121561127f5761127f600080fd5b6112898787610f71565b9450602086013567ffffffffffffffff8111156112a8576112a8600080fd5b6112b4888289016111c7565b9450945050604086013567ffffffffffffffff8111156112d6576112d6600080fd5b6112e288828901611219565b92509250509295509295909350565b60ff8116610f63565b803561033a816112f1565b600080600080600080600060e0888a03121561132357611323600080fd5b61132d8989610f71565b965061133c8960208a01610f71565b955061134b8960408a01610f82565b945061135a8960608a01610f82565b93506113698960808a016112fa565b92506113788960a08a01610f82565b91506113878960c08a01610f82565b905092959891949750929550565b600080604083850312156113ab576113ab600080fd5b6113b58484610f71565b9150610fbc8460208501610f71565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806113ee57607f821691505b602082108103611400576114006113c4565b50919050565b82818337506000910152565b818352602083019250611426828483611406565b50601f01601f19160190565b82818337505050565b81835260208301925060007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561147657611476600080fd5b602083029250611487838584611432565b50500190565b6040808252810161149f818688611412565b905081810360208301526114b481848661143b565b9695505050505050565b801515610f63565b805161033a816114be565b6000602082840312156114e6576114e6600080fd5b61035f83836114c6565b600d8152602081017f496e76616c69642070726f6f6600000000000000000000000000000000000000815290506110fe565b6020808252810161033a816114f0565b60c081016115408289610fdd565b61154d60208301886110e4565b61155a60408301876110e4565b6115676060830186610fdd565b6115746080830185610fdd565b61158160a0830184610fdd565b979650505050505050565b6040810161159a82856110e4565b61035f60208301846110e4565b606081016115b582866110e4565b6115c26020830185610fdd565b6109226040830184610fdd565b6020810161033a82846110e4565b634e487b7160e01b600052601160045260246000fd5b8082018082111561033a5761033a6115dd565b60a081016116148288610fdd565b6116216020830187610fdd565b61162e6040830186610fdd565b61163b6060830185610fdd565b6114b460808301846110e4565b608081016116568287610fdd565b6116636020830186611086565b6116706040830185610fdd565b61167d6060830184610fdd565b95945050505050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122045d0de25cd372e97604478b1d3d9eb07141907e488a4e6e46e772c7515030e1864736f6c63430008180033";

type MyTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyToken__factory extends ContractFactory {
  constructor(...args: MyTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  override deploy(
    _verifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_verifier, overrides || {}) as Promise<
      MyToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MyToken__factory {
    return super.connect(runner) as MyToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyTokenInterface {
    return new Interface(_abi) as MyTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MyToken {
    return new Contract(address, _abi, runner) as unknown as MyToken;
  }
}
