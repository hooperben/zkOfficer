/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NonSybilERC20,
  NonSybilERC20Interface,
} from "../../../contracts/NonSybilERC20.sol/NonSybilERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_verifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "ERC2612ExpiredSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC2612InvalidSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "currentNonce",
        type: "uint256",
      },
    ],
    name: "InvalidAccountNonce",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_proof",
        type: "bytes",
      },
      {
        internalType: "bytes32[]",
        name: "_publicInputs",
        type: "bytes32[]",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "nullifiers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "verifier",
    outputs: [
      {
        internalType: "contract UltraVerifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162001d0b38038062001d0b833981016040819052620000359162000266565b6040518060400160405280600781526020016626bcaa37b5b2b760c91b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600781526020016626bcaa37b5b2b760c91b815250604051806040016040528060038152602001624d544b60e81b8152508160039081620000bd91906200039b565b506004620000cc82826200039b565b50620000de9150839050600562000149565b61012052620000ef81600662000149565b61014052815160208084019190912060e052815190820120610100524660a0526200011962000182565b60805250503060c05250600880546001600160a01b0319166001600160a01b039290921691909117905562000583565b600060208351101562000169576200016183620001de565b90506200017c565b816200017684826200039b565b5060ff90505b92915050565b60e05161010051604051600092620001c3927f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f92469030906020016200047a565b60405160208183030381529060405280519060200120905090565b600080829050601f8151111562000215578260405163305a27a960e01b81526004016200020c91906200052b565b60405180910390fd5b8051620002228262000549565b179392505050565b90565b60006001600160a01b0382166200017c565b6200024a816200022d565b81146200025657600080fd5b50565b80516200017c816200023f565b6000602082840312156200027d576200027d600080fd5b62000289838362000259565b9392505050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052602260045260246000fd5b600281046001821680620002d157607f821691505b602082108103620002e657620002e6620002a6565b50919050565b60006200017c6200022a8381565b6200030583620002ec565b815460001960089490940293841b1916921b91909117905550565b60006200032f818484620002fa565b505050565b8181101562000353576200034a60008262000320565b60010162000334565b5050565b601f8211156200032f576000818152602090206020601f85010481016020851015620003805750805b620003946020601f86010483018262000334565b5050505050565b81516001600160401b03811115620003b757620003b762000290565b620003c38254620002bc565b620003d082828562000357565b506020601f821160018114620004085760008315620003ef5750848201515b600019600885021c198116600285021785555062000394565b600084815260208120601f198516915b828110156200043a578785015182556020948501946001909201910162000418565b5084821015620004585783870151600019601f87166008021c191681555b50505050600202600101905550565b805b82525050565b62000469816200022d565b60a081016200048a828862000467565b62000499602083018762000467565b620004a8604083018662000467565b620004b7606083018562000467565b620004c660808301846200046f565b9695505050505050565b60005b83811015620004ed578181015183820152602001620004d3565b50506000910152565b600062000501825190565b8084526020840193506200051a818560208601620004d0565b601f01601f19169290920192915050565b60208082528101620002898184620004f6565b60006200017c825190565b600062000554825190565b6020830162000563816200053e565b9250506020811015620002e6576000196020919091036008021b16919050565b60805160a05160c05160e05161010051610120516101405161172d620005de600039600061087e0152600061085101526000610be801526000610bc7015260006107cc015260006107f601526000610820015261172d6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610220578063c1d7799c14610233578063d505accf14610248578063dd62ed3e1461025b57600080fd5b806370a08231146101c15780637ecebe00146101ea57806384b0196e146101fd57806395d89b411461021857600080fd5b80632997e86b116100d35780632997e86b146101675780632b7ac3f31461018a578063313ce567146101aa5780633644e515146101b957600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014357806323b872dd14610154575b600080fd5b61010d610294565b60405161011a9190610f7d565b60405180910390f35b610136610131366004610fd2565b610326565b60405161011a9190611014565b6002545b60405161011a9190611028565b610136610162366004611036565b610340565b61013661017536600461107f565b60096020526000908152604090205460ff1681565b60085461019d906001600160a01b031681565b60405161011a91906110bd565b601260405161011a91906110d4565b610147610366565b6101476101cf3660046110e2565b6001600160a01b031660009081526020819052604090205490565b6101476101f83660046110e2565b610375565b610205610393565b60405161011a9796959493929190611190565b61010d6103f5565b61013661022e366004610fd2565b610404565b6102466102413660046112a9565b610412565b005b61024661025636600461134a565b610540565b6101476102693660046113da565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102a39061141f565b80601f01602080910402602001604051908101604052809291908181526020018280546102cf9061141f565b801561031c5780601f106102f15761010080835404028352916020019161031c565b820191906000526020600020905b8154815290600101906020018083116102ff57829003601f168201915b5050505050905090565b60003361033481858561067a565b60019150505b92915050565b60003361034e85828561068c565b61035985858561072e565b60019150505b9392505050565b60006103706107bf565b905090565b6001600160a01b03811660009081526007602052604081205461033a565b6000606080600080600060606103a761084a565b6103af610877565b604080516000808252602082019092527f0f000000000000000000000000000000000000000000000000000000000000009b939a50919850469750309650945092509050565b6060600480546102a39061141f565b60003361033481858561072e565b6008546040517fea50d0e40000000000000000000000000000000000000000000000000000000081526001600160a01b039091169063ea50d0e4906104619087908790879087906004016114d2565b602060405180830381865afa15801561047e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a29190611516565b6104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d890611567565b60405180910390fd5b600160096000848460018181106104fa576104fa611577565b90506020020135815260200190815260200160002060006101000a81548160ff0219169083151502179055506105398568056bc75e2d631000006108a4565b5050505050565b8342111561057c57836040517f627913020000000000000000000000000000000000000000000000000000000081526004016104d89190611028565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105c98c6001600160a01b0316600090815260076020526040902080546001810190915590565b896040516020016105df9695949392919061158d565b6040516020818303038152906040528051906020012090506000610602826108f7565b905060006106128287878761093f565b9050896001600160a01b0316816001600160a01b03161461066357808a6040517f4b800e460000000000000000000000000000000000000000000000000000000081526004016104d89291906115e7565b61066e8a8a8a61067a565b50505050505050505050565b610687838383600161096f565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107285781811015610719578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016104d893929190611602565b6107288484848403600061096f565b50505050565b6001600160a01b0383166107715760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016104d8919061162a565b6001600160a01b0382166107b45760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016104d8919061162a565b610687838383610a74565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561081857507f000000000000000000000000000000000000000000000000000000000000000046145b1561084257507f000000000000000000000000000000000000000000000000000000000000000090565b610370610ba2565b60606103707f00000000000000000000000000000000000000000000000000000000000000006005610c38565b60606103707f00000000000000000000000000000000000000000000000000000000000000006006610c38565b6001600160a01b0382166108e75760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016104d8919061162a565b6108f360008383610a74565b5050565b600061033a6109046107bf565b836040517f19010000000000000000000000000000000000000000000000000000000000008152600281019290925260228201526042902090565b60008060008061095188888888610ce3565b9250925092506109618282610da5565b50909150505b949350505050565b6001600160a01b0384166109b25760006040517fe602df050000000000000000000000000000000000000000000000000000000081526004016104d8919061162a565b6001600160a01b0383166109f55760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016104d8919061162a565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561072857826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610a669190611028565b60405180910390a350505050565b6001600160a01b038316610a9f578060026000828254610a94919061164e565b90915550610b179050565b6001600160a01b03831660009081526020819052604090205481811015610af8578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016104d893929190611602565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610b3357600280548290039055610b52565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b959190611028565b60405180910390a3505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000004630604051602001610c1d959493929190611661565b60405160208183030381529060405280519060200120905090565b606060ff8314610c5257610c4b83610ea7565b905061033a565b818054610c5e9061141f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8a9061141f565b8015610cd75780601f10610cac57610100808354040283529160200191610cd7565b820191906000526020600020905b815481529060010190602001808311610cba57829003601f168201915b5050505050905061033a565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0841115610d1e5750600091506003905082610d9b565b600060018888888860405160008152602001604052604051610d4394939291906116a3565b6020604051602081039080840390855afa158015610d65573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610d9157506000925060019150829050610d9b565b9250600091508190505b9450945094915050565b6000826003811115610db957610db96116e1565b03610dc2575050565b6001826003811115610dd657610dd66116e1565b03610e0d576040517ff645eedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002826003811115610e2157610e216116e1565b03610e5a576040517ffce698f70000000000000000000000000000000000000000000000000000000081526104d8908290600401611028565b6003826003811115610e6e57610e6e6116e1565b036108f357806040517fd78bce0c0000000000000000000000000000000000000000000000000000000081526004016104d89190611028565b60606000610eb483610ee6565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b600060ff8216601f81111561033a576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b83811015610f42578181015183820152602001610f2a565b50506000910152565b6000610f55825190565b808452602084019350610f6c818560208601610f27565b601f01601f19169290920192915050565b6020808252810161035f8184610f4b565b60006001600160a01b03821661033a565b610fa881610f8e565b8114610fb357600080fd5b50565b803561033a81610f9f565b80610fa8565b803561033a81610fc1565b60008060408385031215610fe857610fe8600080fd5b610ff28484610fb6565b91506110018460208501610fc7565b90509250929050565b8015155b82525050565b6020810161033a828461100a565b8061100e565b6020810161033a8284611022565b60008060006060848603121561104e5761104e600080fd5b6110588585610fb6565b92506110678560208601610fb6565b91506110768560408601610fc7565b90509250925092565b60006020828403121561109457611094600080fd5b61035f8383610fc7565b600061033a82610f8e565b600061033a8261109e565b61100e816110a9565b6020810161033a82846110b4565b60ff811661100e565b6020810161033a82846110cb565b6000602082840312156110f7576110f7600080fd5b61035f8383610fb6565b7fff00000000000000000000000000000000000000000000000000000000000000811661100e565b61100e81610f8e565b61113c8282611022565b5060200190565b60200190565b6000611153825190565b808452602093840193830160005b828110156111865781516111758782611132565b965050602082019150600101611161565b5093949350505050565b60e0810161119e828a611101565b81810360208301526111b08189610f4b565b905081810360408301526111c48188610f4b565b90506111d36060830187611022565b6111e06080830186611129565b6111ed60a0830185611022565b81810360c08301526111ff8184611149565b9998505050505050505050565b60008083601f84011261122157611221600080fd5b50813567ffffffffffffffff81111561123c5761123c600080fd5b60208301915083600182028301111561125757611257600080fd5b9250929050565b60008083601f84011261127357611273600080fd5b50813567ffffffffffffffff81111561128e5761128e600080fd5b60208301915083602082028301111561125757611257600080fd5b6000806000806000606086880312156112c4576112c4600080fd5b6112ce8787610fb6565b9450602086013567ffffffffffffffff8111156112ed576112ed600080fd5b6112f98882890161120c565b9450945050604086013567ffffffffffffffff81111561131b5761131b600080fd5b6113278882890161125e565b92509250509295509295909350565b60ff8116610fa8565b803561033a81611336565b600080600080600080600060e0888a03121561136857611368600080fd5b6113728989610fb6565b96506113818960208a01610fb6565b95506113908960408a01610fc7565b945061139f8960608a01610fc7565b93506113ae8960808a0161133f565b92506113bd8960a08a01610fc7565b91506113cc8960c08a01610fc7565b905092959891949750929550565b600080604083850312156113f0576113f0600080fd5b6113fa8484610fb6565b91506110018460208501610fb6565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061143357607f821691505b60208210810361144557611445611409565b50919050565b82818337506000910152565b81835260208301925061146b82848361144b565b50601f01601f19160190565b82818337505050565b81835260208301925060007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156114bb576114bb600080fd5b6020830292506114cc838584611477565b50500190565b604080825281016114e4818688611457565b905081810360208301526114f9818486611480565b9695505050505050565b801515610fa8565b805161033a81611503565b60006020828403121561152b5761152b600080fd5b61035f838361150b565b600d8152602081017f496e76616c69642070726f6f660000000000000000000000000000000000000081529050611143565b6020808252810161033a81611535565b634e487b7160e01b600052603260045260246000fd5b60c0810161159b8289611022565b6115a86020830188611129565b6115b56040830187611129565b6115c26060830186611022565b6115cf6080830185611022565b6115dc60a0830184611022565b979650505050505050565b604081016115f58285611129565b61035f6020830184611129565b606081016116108286611129565b61161d6020830185611022565b6109676040830184611022565b6020810161033a8284611129565b634e487b7160e01b600052601160045260246000fd5b8082018082111561033a5761033a611638565b60a0810161166f8288611022565b61167c6020830187611022565b6116896040830186611022565b6116966060830185611022565b6114f96080830184611129565b608081016116b18287611022565b6116be60208301866110cb565b6116cb6040830185611022565b6116d86060830184611022565b95945050505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220cff58d887aefe76c101a10b8e7c7503a14f10343265468bdea4acf83d1de444d64736f6c63430008180033";

type NonSybilERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NonSybilERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NonSybilERC20__factory extends ContractFactory {
  constructor(...args: NonSybilERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _verifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_verifier, overrides || {});
  }
  override deploy(
    _verifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_verifier, overrides || {}) as Promise<
      NonSybilERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NonSybilERC20__factory {
    return super.connect(runner) as NonSybilERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonSybilERC20Interface {
    return new Interface(_abi) as NonSybilERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): NonSybilERC20 {
    return new Contract(address, _abi, runner) as unknown as NonSybilERC20;
  }
}
